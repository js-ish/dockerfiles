#!/bin/bash

apply_one() {
    yaml_kind=$(yq e '.kind' $1)
    ns=$(yq e '.metadata.namespace' $1)
    name=$(yq e '.metadata.name' $1)
    apply_version=$(yq e '.apiVersion' $1)

    if [ $yaml_kind == "CronJob" ]; then
        kubectl delete --ignore-not-found=true cronjob/$name -n $ns
        yq e -i ".spec.jobTemplate.spec.template.spec.containers[0].image |= strenv(IMAGE_TAG)" $1
    elif [ $yaml_kind == "Deployment" ]; then
        yq e -i ".spec.template.spec.containers[0].image |= strenv(IMAGE_TAG)" $1
    elif [ $yaml_kind == "Job" ]; then
        if [ $apply_version == "batch.volcano.sh/v1alpha1" ]; then
            kubectl delete --ignore-not-found=true vcjob/$name -n $ns
            yq e -i ".spec.tasks[0].template.spec.containers[0].image |= strenv(IMAGE_TAG)" $1
        else
            kubectl delete --ignore-not-found=true job/$name -n $ns
            yq e -i ".spec.template.spec.containers[0].image |= strenv(IMAGE_TAG)" $1
        fi
    fi
    kubectl apply -f $1
}

apply() {
    for filename in $@; do
        apply_one $filename
    done

    # rollout status / annotation
    for filename in $@; do
        yaml_kind=$(yq e '.kind' $filename)
        if [ $yaml_kind == "Deployment" ]; then
            ns=$(yq e '.metadata.namespace' $filename)
            name=$(yq e '.metadata.name' $filename)
            kubectl -n $ns rollout status -w deploy.apps/$name
        elif [ $yaml_kind == "CanaryDeployPlan" ]; then
            ns=$(yq e '.metadata.namespace' $filename)
            name=$(yq e '.metadata.name' $filename)
            kubectl -n $ns annotate --overwrite canarydeployplan $name triggerTime=$(date +%s%3N)
        fi
    done
}

apply $@
